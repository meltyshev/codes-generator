{"version":3,"sources":["App.module.css","App.jsx","index.js"],"names":["module","exports","App","useState","dictionary","setDictionary","codes","setCodes","handleGenerateClick","useCallback","a","i","length","j","Math","floor","random","shuffle","map","word","min","max","useEffect","default","Container","Grid","padded","Row","Column","Button","fluid","content","onClick","TextArea","value","join","rows","className","styles","textarea","Loader","active","ReactDOM","render","document","getElementById"],"mappings":"6GACAA,EAAOC,QAAU,CAAC,SAAW,wB,2NCoB7B,IAsCeC,EAtCH,WAAO,IAAD,EACoBC,mBAAS,MAD7B,mBACTC,EADS,KACGC,EADH,OAEUF,mBAAS,IAFnB,mBAETG,EAFS,KAEFC,EAFE,KAIVC,EAAsBC,uBAAY,WACtCF,EAbJ,SAAiBG,GACf,IAAK,IAAIC,EAAID,EAAEE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACnC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADP,EAEpB,CAACD,EAAEG,GAAIH,EAAEC,IAAvBD,EAAEC,GAFgC,KAE5BD,EAAEG,GAF0B,KAIvC,OAAOH,EAQIO,CAAQb,EAAWc,KAAI,SAACC,GAAD,gBAAaA,GAAb,QAjBdC,EAiB+C,GAjB1CC,EAiB8C,IAhBhEP,KAAKC,MAAMD,KAAKE,UAAYK,EAAMD,EAAM,IAAMA,IADvD,IAAsBA,EAAKC,SAkBtB,CAACjB,IAQJ,OANAkB,qBAAU,WACR,sBAAC,sBAAAZ,EAAA,kEACCL,EADD,SACsB,kCADtB,mBACmDkB,SADnD,wDAAD,KAGC,IAEEnB,EAKH,kBAACoB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,QAAM,GACV,kBAACD,EAAA,EAAKE,IAAN,KACE,kBAACF,EAAA,EAAKG,OAAN,KACE,kBAACC,EAAA,EAAD,CAAQC,OAAK,EAACC,QAAQ,iFAAgBC,QAASxB,MAGlDF,EAAMM,OAAS,GACd,kBAACa,EAAA,EAAKE,IAAN,KACE,kBAACF,EAAA,EAAKG,OAAN,KACE,kBAACK,EAAA,EAAD,CAAUC,MAAO5B,EAAM6B,KAAK,MAAOC,KAAM9B,EAAMM,OAAQyB,UAAWC,IAAOC,eAd5E,kBAACC,EAAA,EAAD,CAAQC,QAAM,GAAd,iFC/BXC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.51908ead.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"App_textarea__NtVfp\"};","import React, { useCallback, useEffect, useState } from 'react';\nimport {\n  Button, Container, Grid, Loader, TextArea\n} from 'semantic-ui-react';\n\nimport styles from './App.module.css';\n\nimport 'semantic-ui-css/semantic.min.css';\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\nconst App = () => {\n  const [dictionary, setDictionary] = useState(null);\n  const [codes, setCodes] = useState([]);\n\n  const handleGenerateClick = useCallback(() => {\n    setCodes(shuffle(dictionary.map((word) => `${word}${getRandomInt(10, 999)}`)));\n  }, [dictionary]);\n\n  useEffect(() => {\n    (async () => {\n      setDictionary((await import('./dictionary.json')).default);\n    })();\n  }, []);\n\n  if (!dictionary) {\n    return <Loader active>Загружаю базу...</Loader>;\n  }\n\n  return (\n    <Container>\n      <Grid padded>\n        <Grid.Row>\n          <Grid.Column>\n            <Button fluid content=\"Сгенерировать\" onClick={handleGenerateClick} />\n          </Grid.Column>\n        </Grid.Row>\n        {codes.length > 0 && (\n          <Grid.Row>\n            <Grid.Column>\n              <TextArea value={codes.join('\\n')} rows={codes.length} className={styles.textarea} />\n            </Grid.Column>\n          </Grid.Row>\n        )}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}